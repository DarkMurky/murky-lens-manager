name: Build and Push Docker to EKS

on:
  push:
    branches:
      - eks

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
  DOCKER_REPOSITORY: murky-manager-app
  DOCKER_IMAGE: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_REPOSITORY }}
  DOCKER_TAG: dev

jobs:                                            
  release:                                       
    name: Release                                
    runs-on: ubuntu-latest         
              
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Create .env file
        run: echo "NEXT_PUBLIC_DB_HOST=http://view.cursetheweb.online" > .env

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ env.DOCKERHUB_USERNAME}}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }} .

      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Get EKS Cluster Credentials
        run: |
          aws eks update-kubeconfig --name ${{ secrets.DEV_AWS_EKS_CLUSTER_NAME }} --region ${{ secrets.AWS_REGION }}

      - name: Checkout Helm Chart Repository
        uses: actions/checkout@v2
        with:
          repository: DarkMurky/murky-view-infrasturcture
        
      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3.sh | bash

      - name: Deploy with Helm
        run: |
          helm upgrade --install my-release ./murky-view-infrasturcture/k8s/murky-view-chart --set image.repository=${{ env.DOCKER_IMAGE }} --set image.tag=${{ env.DOCKER_TAG }} 
